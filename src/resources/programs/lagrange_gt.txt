pstart single
estart
add.ss s7, s0, s0
eend
pend

//Calculate value of gt
pstart nelemvec
ld.vec v0, XNEW
ld.vec v1, X
ld.vec v2, DV
estart
sub.vv v0, v0, v1 //v0 = xnew[i]-x[i]
red.vv x0, v0, v2 //x0 = dv[i]*(xnew[i]-x[i]), summation
mul.sx x1, s0, x1 //clear x1
add.ix x1, x1, 1  //x1 = 1
red.xx s1, x0, x1 //x0 = sum(dv[i]...)
add.ss s7, s7, s1 //sum(dv[i]*(xnew[i]-x[i])=gt
eend
pend

//Increment value of gt with value of g
pstart single
estart
add.ss s1, s7, s13
eend
pend

//Update either l1 or l2
bge s1, s0, GT_POSITIVE //if gt >= 0, l1=lmid
//otherwise, l2 = lmid
pstart single
estart
add.ss s12, s0, s8 //s12 = s8 <> l2 = lmid
eend
pend
//beq s0, s0 LAGRANGE_START
beq s0, s0, LAGRANGE_END

GT_POSITIVE:
pstart single
estart
add.ss s11, s0, s8 //s11 = s8 <> l1 = lmid
eend
pend
//beq s0, s0, LAGRANGE_START
beq s0, s0, LAGRANGE_END

LAGRANGE_END: